class Solution {
public:
    bool canPlaced(const vector<int>& arr, int dist, int ball){
        int count = 1;
        int lastPlaced = arr[0];
        for(int i = 0; i< arr.size(); i++){
            if(arr[i] - lastPlaced >= dist){
                count++;
                lastPlaced = arr[i];
            }
            if(count >= ball){
                return true;
            }
        }
        return false;
    }
    int maxDistance(vector<int>& position, int m) {
        sort(position.begin(), position.end());
        int lo = 1;
        int hi = (position.back() - position[0]) / (m-1);
        int ans = 1;
        while(lo <= hi){
            int mid = lo + (hi-lo)/2;
            if(canPlaced(position, mid, m)){
                ans = mid;
                lo = mid+1;
            }else{
                hi = mid - 1;
            }
        }
        return ans;
    }
};
